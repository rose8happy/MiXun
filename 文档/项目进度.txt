7_8 上午记
接下来要做的事：
    1添加登录失败的返回 已验证
    2添加未登录状态的返回 已添加，本地页面验证
    3添加jwt的filter 已添加，未验证
    (2和3是不是有点重叠的说，答案是并不会。
    验证流程为，验证令牌，令牌有效直接通过；令牌无效，需要登录，登录返回的将不是一个界面，而是一个json
    4然后与前端验证 使用postman验证

    5注册接口 已验证
        虽然登录接口不用写了，也不用管post了，但是注册还是需要post的……？
        实际上post接口没有问题，注册接口可以访问
    6咋登录的来着 应该是访问/login，login中验证账号密码，然后给token？
        还有就是简历列表.html是访问不了的，/login还可以访问，不记得之前干了什么
        讲道理登录应该用post，但是post会被security屏蔽，需要对csrf做些什么来解除屏蔽
        且先不管
        token需要被放在header中而不是params中
    7我自定义的login page有啥问题来着……？虽然确实是不用了
        login，如果是get，将被视为对资源的访问，如果是post，将导向security的login，进行登录操作
        据大佬博客指出：
            如果是 GET 请求表示你想访问登录页面，如果是 POST 请求，表示你想提交登录数据。
            但是在你配置了loginPage("/login.html")之后，登录接口地址也设置成 /login.html 了
        虽然不知道怎么把login换成自己的，但是post login会返回token是没问题的，所以就先不写登录接口了

不设置成txt就莫名其妙会被锁的文件……

7_9 上午准备做的验证实验
    1.csrf的禁用对post接口的影响
        禁用csrf确实可以开放post接口，不禁用的话不能访问
        但是禁用似乎会对安全性造成影响
        有空的话可以换成config的方法来开放post接口
    2.更新密码接口，一种是自定义接口，另一种Spring Security好像有提供方法
        使用自带的JdbcUserDetailsManager更新密码
    4.Mybatis好像白引进了，Spring Security已经提供了基础的查找方法的插入方法
        简历表还是要Mybatis的
    5.验证token的时候可以验证一下是否过期，过期需要重新登录
        验证token的时候过期会自动引发异常被识别到呢

    6.比较大的两个工程，引入redis与引入微服务
    7.token的意义 (如果只是确认身份，那么可以直接传账号密码，如果会被拦截，那么token也可以被拦截
        如果每次都使用账号密码做验证（账号是公开的，必然要配合密码才能验证）这种情况下token泄露好过密码泄露，因为用户可能密码多用

    8.注册的时候需要手机验证码或者邮箱验证码
    9.有教程说在jwt中对每个用户单独设立secret有以下好处
        （1）注销时删除secret，验证将不再通过
        （2）修改密码后修改secret，原来的token验证也将不通过

    10.怎样让token变得更安全
        使用https

    11.mybatis查询中直接用写死的字符串不行，不知道替代方法是什么
        我暂时使用的方法是字符串从外面写死再把变量传进xml中查询

    12.虽然类的属性名和表的字段名已经一样了，但是还是不能匹配成功
        原因可能是Spring Boot或者Mybatis对于大小写的转换和对于下划线和驼峰的转换？
        正确的 Mybatis配置里面有一个map-underscore-to-camel-case驼峰命名规则的配置
        关掉之后返回就正常了

    13. queryCV CV_q json格式字符串数据如下
    {
        "name": null,
        "phone_num": null,
        "gender": "or",
        "job_intention": null,
        "specialized_subject": null,
        "qualifications": "本科",
        "service_years": 0,
        "creat_time_b": null,
        "creat_time_a": "2023-02-03",
        "cv_ID": 1,
        "cv_state": "已储备",
        "cv_source": null
    }

    14.代码行数统计git命令
    git log --format='%aN' | sort -u | while read name; do echo -en "$name\t"; git log --author="$name" --pretty=tformat: --numstat | grep "\(.html\|.java\|.xml\|.properties\|.css\|.js\|.txt\)$" | awk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf "added lines: %s, removed lines: %s, total lines: %s\n", add, subs, loc }' -; done